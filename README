A learning exercise using Compojure, Ring and Enlive.

I'm sure there are more idiomatic ways to do some things that I'm doing.
Better ways to do some of the compojure and ring stuff that I'm doing and
probably issues with how I'm using enlive, organizing code etc. Input
on all of the above and more greatly appreciated. You can contact
me here on github or email sean@monkeysnatchbanana.com.

--

A basic to do application that just provides for the ability to add new to do items and remove them when done.
No priority etc. There is currently no persistence beyond in memory so all to-dos disappear on each restart.

The use of enlive as a templating engine was inspired by my work on a logicless and valueless templating engine
for ruby ( java version available as well ): https://github.com/jamesladd/nate

Special thanks to David Nolen for his enlive tutorial ( https://github.com/swannodette/enlive-tutorial ) which 
provided the final push I needed to first start working on complete separation of logic and template and then
gave me a basis for learning to use enlive as a templating engine.

--

No tests yet as I haven't read up on the various clojure testing framework options.

--

Requires leiningen and compass:

Leiningen: https://github.com/technomancy/leiningen
Compass: http://compass-style.org/

To build and run:

compass compile
lein deps
lein compile
lein ring server

To use:

build and run at which point, once the server starts, lein ring should
open a browser window pointing at our server on http://0.0.0.0:3000/
if it doesn't, just fire up a browser and point it at that address.
